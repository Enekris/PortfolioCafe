// <auto-generated />
using System;
using Cafe.Dal.Infrastructure.DBSettingsEF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cafe.Dal.Infrastructure.Migrations.Cafe
{
    [DbContext(typeof(CafeContext))]
    [Migration("20240920112735_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cafe.Dal.Contracts.Repositories.Customer.Models.CustomerDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Customer__3214EC079C6F0AE3");

                    b.HasIndex(new[] { "Phone" }, "UQ__Customer__5C7E359E41EBE8F4")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "UQ__Customer__A9D1053487236DEB")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("Cafe.Dal.Contracts.Repositories.Dish.Models.DishDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCreate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCreate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Description");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("Price");

                    b.HasKey("Id")
                        .HasName("Id");

                    b.HasIndex("ItemName")
                        .IsUnique()
                        .HasDatabaseName("ItemName");

                    b.ToTable("Dishes", (string)null);
                });

            modelBuilder.Entity("Cafe.Dal.Contracts.Repositories.Order.Models.OrderDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Close_date");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Customer_id");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Order_date");

                    b.Property<int>("TableId")
                        .HasColumnType("int")
                        .HasColumnName("Table_id");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Orders__3214EC07793E0129");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TableId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("Cafe.Dal.Contracts.Repositories.OrderDish.model.OrdersDishDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DishId")
                        .HasColumnType("int")
                        .HasColumnName("Dish_id");

                    b.Property<int?>("DishPriceOnOrdersDate")
                        .HasColumnType("int")
                        .HasColumnName("DishPriceOnOrdersDate");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Order_date");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_id");

                    b.HasKey("Id")
                        .HasName("PK__OrdersDi__3214EC076E270CAB");

                    b.HasIndex("DishId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrdersDishes", (string)null);
                });

            modelBuilder.Entity("Cafe.Dal.Contracts.Repositories.Table.Models.TableDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Reserved")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReservedCustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Reserved_Customer_Id");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Tables__3214EC073EB625F0");

                    b.HasIndex(new[] { "Number" }, "UQ__Tables__78A1A19D5DB70977")
                        .IsUnique();

                    b.ToTable("Tables", (string)null);
                });

            modelBuilder.Entity("Cafe.Dal.Contracts.Repositories.Order.Models.OrderDb", b =>
                {
                    b.HasOne("Cafe.Dal.Contracts.Repositories.Customer.Models.CustomerDb", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Orders__Customer__114A936A");

                    b.HasOne("Cafe.Dal.Contracts.Repositories.Table.Models.TableDb", "Table")
                        .WithMany("Orders")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Orders__Tables_i__123EB7A3");

                    b.Navigation("Customer");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("Cafe.Dal.Contracts.Repositories.OrderDish.model.OrdersDishDb", b =>
                {
                    b.HasOne("Cafe.Dal.Contracts.Repositories.Dish.Models.DishDb", "Dish")
                        .WithMany("OrdersDishes")
                        .HasForeignKey("DishId")
                        .HasConstraintName("FK__OrdersDis__Dish___69FBBC1F");

                    b.HasOne("Cafe.Dal.Contracts.Repositories.Order.Models.OrderDb", "Order")
                        .WithMany("OrdersDishes")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrdersDis__DishP__690797E6");

                    b.Navigation("Dish");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Cafe.Dal.Contracts.Repositories.Customer.Models.CustomerDb", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Cafe.Dal.Contracts.Repositories.Dish.Models.DishDb", b =>
                {
                    b.Navigation("OrdersDishes");
                });

            modelBuilder.Entity("Cafe.Dal.Contracts.Repositories.Order.Models.OrderDb", b =>
                {
                    b.Navigation("OrdersDishes");
                });

            modelBuilder.Entity("Cafe.Dal.Contracts.Repositories.Table.Models.TableDb", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
